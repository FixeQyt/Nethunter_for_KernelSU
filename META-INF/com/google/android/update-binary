#!/sbin/sh
# Kali NetHunter installer

## Detect bootmode.
## "BOOTMODE=true"  = Device has booted into system (NetHunter installated as Magisk module)
## "BOOTMODE=false" = Device has booted into recovery (NetHunter installed through TWRP)
BOOTMODE=false;
ps | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;
$BOOTMODE || ps -A 2>/dev/null | grep zygote | grep -v grep >/dev/null && BOOTMODE=true;


################################
##                            ##
##  Install in KernelSU       ##
##                            ##
################################

if $BOOTMODE; then

    #################
    # Initialization
    #################

    umask 022

    # Global vars
    TMPDIR=/dev/tmp
    PERSISTDIR=/sbin/.magisk/mirror/persist

    rm -rf $TMPDIR 2>/dev/null
    mkdir -p $TMPDIR

    # echo before loading util_functions
    ui_print() { echo "$1"; }

    set_perm_recursive() {
        find $1 -type d 2>/dev/null | while read dir; do
            set_perm $dir $2 $3 $4 $6
        done
        find $1 -type f -o -type l 2>/dev/null | while read file; do
            set_perm $file $2 $3 $5 $6
        done
    }

    #########################
    # Load util_functions.sh
    #########################

    OUTFD=$2
    ZIPFILE=$3

    mount /data 2>/dev/null

    [ -f /data/adb/magisk/util_functions.sh ]
    . /data/adb/magisk/util_functions.sh
    [ $MAGISK_VER_CODE -lt 20400 ]

    #########################
    # Install module
    #########################
    rm -rf $TMPDIR
    mkdir -p $TMPDIR

    setup_flashable
    mount_partitions
    api_level_arch_detect
    
    # Setup busybox and binaries
    boot_actions

    # Extract prop file
    unzip -o "$ZIPFILE" module.prop -d $TMPDIR >&2
    [ ! -f $TMPDIR/module.prop ] && abort "! Unable to extract zip file!"

    MODDIRNAME=modules_update
    MODID=`grep_prop id $TMPDIR/module.prop`
    MODNAME=`grep_prop name $TMPDIR/module.prop`
    MODAUTH=`grep_prop author $TMPDIR/module.prop`
    MODPATH=$NVBASE/$MODDIRNAME/$MODID

    # Create mod paths
    rm -rf $MODPATH
    mkdir -p $MODPATH

    ##########
    # Install
    ##########

    unzip -oj "$ZIPFILE" module.prop install.sh uninstall.sh 'common/*' -d $TMPDIR >&2

    # Load install script
    . $TMPDIR/install.sh

    # Callbacks
    print_modname
    on_install

    # Custom uninstaller
    [ -f $TMPDIR/uninstall.sh ] && cp -af $TMPDIR/uninstall.sh $MODPATH/uninstall.sh

    # Skip mount
    $SKIPMOUNT && touch $MODPATH/skip_mount

    # prop file
    $PROPFILE && cp -af $TMPDIR/system.prop $MODPATH/system.prop

    # Module info
    cp -af $TMPDIR/module.prop $MODPATH/module.prop

    # post-fs-data scripts
    $POSTFSDATA && cp -af $TMPDIR/post-fs-data.sh $MODPATH/post-fs-data.sh

    # service scripts
    $LATESTARTSERVICE && cp -af $TMPDIR/service.sh $MODPATH/service.sh

    ui_print "- Setting permissions"
    set_perm_recursive  $MODPATH  0  0  0755  0644

    # Handle replace folders
    for TARGET in $REPLACE; do
        ui_print "- Replace target: $TARGET"
        mktouch $MODPATH$TARGET/.replace
    done

    # Update info for Magisk Manager
    mktouch $NVBASE/modules/$MODID/update
    cp -af $MODPATH/module.prop $NVBASE/modules/$MODID/module.prop
  
    # Copy over custom sepolicy rules
    if [ -f $MODPATH/sepolicy.rule -a -e $PERSISTDIR ]; then
        ui_print "- Installing custom sepolicy patch"
        PERSISTMOD=$PERSISTDIR/magisk/$MODID
        mkdir -p $PERSISTMOD
        cp -af $MODPATH/sepolicy.rule $PERSISTMOD/sepolicy.rule
    fi


    # Clean up
    rm -rf $MODPATH/update-magisk \
    $MODPATH/system/placeholder $MODPATH/customize.sh \
    $MODPATH/README.md $MODPATH/.git*
    rm -rf $TMPDIR
    cd /

    ui_print "Nethunter Deployed Successfully"
    exit 0
else
    print " "
    print "********** Recovery Flash Detected **********"
    print " "
    print "This NetHunter package cannot be"
    print "installed on this device via recovery"
    print "Please Flash this file via KernelSU Manager"
    print " "
    print "******* NetHunter Installation failed *******"
    exit 1
fi